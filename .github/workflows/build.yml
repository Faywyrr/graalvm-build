name: GraalVM Native Image builds
on: [push]
    
jobs:
  files:
    if: contains(github.event.head_commit.message, 'Add files via upload')
    name: Get added files
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.changed-files.outputs.added_files }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        
      - name: Info
        run: echo Files ${{ steps.changed-files.outputs.added_files }}
          
  build:
    needs: [files]
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:      
      - uses: actions/checkout@v3
      
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'false'

      - name: Build Windows
        if: matrix.os == 'windows-latest' && contains(github.event.head_commit.message, 'windows')
        shell: cmd
        run: |
          mkdir output
          cd output
          for %%f in (${{ needs.files.outputs.files }}) do (
            native-image -jar ../%%f
          )

      - name: Build MacOS
        if: matrix.os == 'macos-latest' && contains(github.event.head_commit.message, 'macos')
        shell: bash
        run: |
          mkdir output
          cd output
          for file in ${{ needs.files.outputs.files }}; do
            native-image -jar ../$file
          done
          
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest' && contains(github.event.head_commit.message, 'linux')
        shell: bash
        run: |
          mkdir output
          cd output
          for file in ${{ needs.files.outputs.files }}; do
            native-image -jar ../$file
          done
          
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: |
            output/*
            !output/*.txt

  end:
    needs: [files, build]
    name: Remove file(s)
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
    
      - name: Git init
        run: |
          git config --global user.email "<>"
          git config --global user.name "Github Actions"
          
      - name: Remove files
        run: |
          for file in ${{ needs.files.outputs.files }}; do
            rm $file
            git rm $file
            git commit -m "Github Actions : Remove $file"
          done
          git push
